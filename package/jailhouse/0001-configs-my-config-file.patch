From 578a9076ce6dcadf45bb0f2903f44bc49a39de70 Mon Sep 17 00:00:00 2001
From: Franck Demathieu <fdemathieu@gmail.com>
Date: Fri, 17 Mar 2017 15:00:17 +0100
Subject: [PATCH] configs: my config file

Signed-off-by: Franck Demathieu <fdemathieu@gmail.com>
---
 configs/qemu-vm-mine.c | 418 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 418 insertions(+)
 create mode 100644 configs/qemu-vm-mine.c

diff --git a/configs/qemu-vm-mine.c b/configs/qemu-vm-mine.c
new file mode 100644
index 0000000..6a0d0da
--- /dev/null
+++ b/configs/qemu-vm-mine.c
@@ -0,0 +1,418 @@
+/*
+ * Jailhouse, a Linux-based partitioning hypervisor
+ *
+ * Copyright (c) Siemens AG, 2014-2016
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2.  See
+ * the COPYING file in the top-level directory.
+ *
+ * Alternatively, you can use or redistribute this file under the following
+ * BSD license:
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
+ * THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * Configuration for QEMU Standard PC (Q35 + ICH9, 2009)
+ * created with '/usr/local/libexec/jailhouse/jailhouse config create -r myboard configs/qemu-vm.c'
+ *
+ * NOTE: This config expects the following to be appended to your kernel cmdline
+ *       "memmap=0x4200000$0x3b000000"
+ */
+
+#include <jailhouse/types.h>
+#include <jailhouse/cell-config.h>
+
+#define ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))
+
+struct {
+	struct jailhouse_system header;
+	__u64 cpus[1];
+	struct jailhouse_memory mem_regions[15];
+	struct jailhouse_irqchip irqchips[1];
+	__u8 pio_bitmap[0x2000];
+	struct jailhouse_pci_device pci_devices[7];
+	struct jailhouse_pci_capability pci_caps[8];
+} __attribute__((packed)) config = {
+	.header = {
+		.signature = JAILHOUSE_SYSTEM_SIGNATURE,
+		.revision = JAILHOUSE_CONFIG_REVISION,
+		.hypervisor_memory = {
+			.phys_start = 0x3b000000,
+			.size = 0x4000000,
+		},
+		.debug_console = {
+			.address = 0x3f8,
+			.flags = JAILHOUSE_CON_TYPE_UART_X86 |
+				JAILHOUSE_CON_FLAG_PIO,
+		},
+		.platform_info = {
+			.pci_mmconfig_base = 0xb0000000,
+			.pci_mmconfig_end_bus = 0xff,
+			.x86 = {
+				.pm_timer_address = 0x608,
+				.vtd_interrupt_limit = 256,
+				.iommu_units = {
+					{
+						.base = 0xfed90000,
+						.size = 0x1000,
+					},
+				},
+			},
+		},
+		.root_cell = {
+			.name = "RootCell",
+			.cpu_set_size = sizeof(config.cpus),
+			.num_memory_regions = ARRAY_SIZE(config.mem_regions),
+			.num_irqchips = ARRAY_SIZE(config.irqchips),
+			.pio_bitmap_size = ARRAY_SIZE(config.pio_bitmap),
+			.num_pci_devices = ARRAY_SIZE(config.pci_devices),
+			.num_pci_caps = ARRAY_SIZE(config.pci_caps),
+		},
+	},
+
+	.cpus = {
+		0x000000000000000f,
+	},
+
+	.mem_regions = {
+		/* MemRegion: 00000000-0009fbff : System RAM */
+		{
+			.phys_start = 0x0,
+			.virt_start = 0x0,
+			.size = 0xa0000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_EXECUTE | JAILHOUSE_MEM_DMA,
+		},
+		/* MemRegion: 000a0000-000bffff : PCI Bus 0000:00 */
+		{
+			.phys_start = 0xa0000,
+			.virt_start = 0xa0000,
+			.size = 0x20000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: 00100000-00ffffff : System RAM */
+		{
+			.phys_start = 0x100000,
+			.virt_start = 0x100000,
+			.size = 0xf00000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_EXECUTE | JAILHOUSE_MEM_DMA,
+		},
+		/* MemRegion: 01000000-01ffffff : Kernel */
+		{
+			.phys_start = 0x1000000,
+			.virt_start = 0x1000000,
+			.size = 0x1000000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_EXECUTE | JAILHOUSE_MEM_DMA,
+		},
+		/* MemRegion: 02000000-3affffff : System RAM */
+		{
+			.phys_start = 0x2000000,
+			.virt_start = 0x2000000,
+			.size = 0x39000000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_EXECUTE | JAILHOUSE_MEM_DMA,
+		},
+		/* MemRegion: 3f200000-3ffddfff : System RAM */
+		{
+			.phys_start = 0x3f200000,
+			.virt_start = 0x3f200000,
+			.size = 0xdde000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_EXECUTE | JAILHOUSE_MEM_DMA,
+		},
+		/* MemRegion: fd000000-fdffffff : bochs-drm */
+		{
+			.phys_start = 0xfd000000,
+			.virt_start = 0xfd000000,
+			.size = 0x1000000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: fe000000-fe003fff : virtio-pci-modern */
+		{
+			.phys_start = 0xfe000000,
+			.virt_start = 0xfe000000,
+			.size = 0x4000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: fe004000-fe007fff : virtio-pci-modern */
+		{
+			.phys_start = 0xfe004000,
+			.virt_start = 0xfe004000,
+			.size = 0x4000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: feb80000-febbffff : 0000:00:02.0 */
+		{
+			.phys_start = 0xfeb80000,
+			.virt_start = 0xfeb80000,
+			.size = 0x40000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: febd0000-febd0fff : bochs-drm */
+		{
+			.phys_start = 0xfebd0000,
+			.virt_start = 0xfebd0000,
+			.size = 0x1000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: febd3000-febd3fff : 0000:00:1f.2 */
+		{
+			.phys_start = 0xfebd3000,
+			.virt_start = 0xfebd3000,
+			.size = 0x1000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: fed00000-fed003ff : PNP0103:00 */
+		{
+			.phys_start = 0xfed00000,
+			.virt_start = 0xfed00000,
+			.size = 0x1000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: 000c0000-000dffff : ROMs */
+		{
+			.phys_start = 0xc0000,
+			.virt_start = 0xc0000,
+			.size = 0x20000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+		/* MemRegion: 3f000000-3f1fffff : JAILHOUSE Inmate Memory */
+		{
+			.phys_start = 0x3f000000,
+			.virt_start = 0x3f000000,
+			.size = 0x200000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE,
+		},
+	},
+
+	.irqchips = {
+		/* IOAPIC 0, GSI base 0 */
+		{
+			.address = 0xfec00000,
+			.id = 0xff00,
+			.pin_bitmap = {
+				0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff
+			},
+		},
+	},
+
+	.pio_bitmap = {
+		[     0/8 ...   0x3f/8] = -1,
+		[  0x40/8 ...   0x47/8] = 0xf0, /* PIT */
+		[  0x48/8 ...   0x5f/8] = -1,
+		[  0x60/8 ...   0x67/8] = 0xec, /* HACK: NMI status/control */
+		[  0x68/8 ...   0x6f/8] = -1,
+		[  0x70/8 ...   0x77/8] = 0xfc, /* RTC */
+		[  0x78/8 ...   0x7f/8] = -1,
+		[  0x80/8 ...   0x87/8] = 0xfe, /* Linux: native_io_delay() */
+		[  0x88/8 ...  0x3af/8] = -1,
+		[ 0x3b0/8 ...  0x3df/8] = 0x00, /* VGA */
+		[ 0x3e0/8 ...  0xcff/8] = -1,
+		[ 0xd00/8 ... 0xffff/8] = 0, /* HACK: PCI bus */
+	},
+
+	.pci_devices = {
+		/* PCIDevice: 00:00.0 */
+		{
+			.type = JAILHOUSE_PCI_TYPE_DEVICE,
+			.iommu = 0,
+			.domain = 0x0,
+			.bdf = 0x0,
+			.bar_mask = {
+				0x00000000, 0x00000000, 0x00000000,
+				0x00000000, 0x00000000, 0x00000000,
+			},
+			.caps_start = 0,
+			.num_caps = 0,
+			.num_msi_vectors = 0,
+			.msi_64bits = 0,
+			.num_msix_vectors = 0,
+			.msix_region_size = 0x0,
+			.msix_address = 0x0,
+		},
+		/* PCIDevice: 00:01.0 */
+		{
+			.type = JAILHOUSE_PCI_TYPE_DEVICE,
+			.iommu = 0,
+			.domain = 0x0,
+			.bdf = 0x8,
+			.bar_mask = {
+				0xff000000, 0x00000000, 0xfffff000,
+				0x00000000, 0x00000000, 0x00000000,
+			},
+			.caps_start = 0,
+			.num_caps = 0,
+			.num_msi_vectors = 0,
+			.msi_64bits = 0,
+			.num_msix_vectors = 0,
+			.msix_region_size = 0x0,
+			.msix_address = 0x0,
+		},
+		/* PCIDevice: 00:02.0 */
+		{
+			.type = JAILHOUSE_PCI_TYPE_DEVICE,
+			.iommu = 0,
+			.domain = 0x0,
+			.bdf = 0x10,
+			.bar_mask = {
+				0xffffffe0, 0xfffff000, 0x00000000,
+				0x00000000, 0xffffc000, 0xffffffff,
+			},
+			.caps_start = 0,
+			.num_caps = 6,
+			.num_msi_vectors = 0,
+			.msi_64bits = 0,
+			.num_msix_vectors = 3,
+			.msix_region_size = 0x1000,
+			.msix_address = 0xfebd1000,
+		},
+		/* PCIDevice: 00:03.0 */
+		{
+			.type = JAILHOUSE_PCI_TYPE_DEVICE,
+			.iommu = 0,
+			.domain = 0x0,
+			.bdf = 0x18,
+			.bar_mask = {
+				0xffffffc0, 0xfffff000, 0x00000000,
+				0x00000000, 0xffffc000, 0xffffffff,
+			},
+			.caps_start = 0,
+			.num_caps = 6,
+			.num_msi_vectors = 0,
+			.msi_64bits = 0,
+			.num_msix_vectors = 2,
+			.msix_region_size = 0x1000,
+			.msix_address = 0xfebd2000,
+		},
+		/* PCIDevice: 00:1f.0 */
+		{
+			.type = JAILHOUSE_PCI_TYPE_DEVICE,
+			.iommu = 0,
+			.domain = 0x0,
+			.bdf = 0xf8,
+			.bar_mask = {
+				0x00000000, 0x00000000, 0x00000000,
+				0x00000000, 0x00000000, 0x00000000,
+			},
+			.caps_start = 0,
+			.num_caps = 0,
+			.num_msi_vectors = 0,
+			.msi_64bits = 0,
+			.num_msix_vectors = 0,
+			.msix_region_size = 0x0,
+			.msix_address = 0x0,
+		},
+		/* PCIDevice: 00:1f.2 */
+		{
+			.type = JAILHOUSE_PCI_TYPE_DEVICE,
+			.iommu = 0,
+			.domain = 0x0,
+			.bdf = 0xfa,
+			.bar_mask = {
+				0x00000000, 0x00000000, 0x00000000,
+				0x00000000, 0xffffffe0, 0xfffff000,
+			},
+			.caps_start = 6,
+			.num_caps = 2,
+			.num_msi_vectors = 1,
+			.msi_64bits = 1,
+			.num_msix_vectors = 0,
+			.msix_region_size = 0x0,
+			.msix_address = 0x0,
+		},
+		/* PCIDevice: 00:1f.3 */
+		{
+			.type = JAILHOUSE_PCI_TYPE_DEVICE,
+			.iommu = 0,
+			.domain = 0x0,
+			.bdf = 0xfb,
+			.bar_mask = {
+				0x00000000, 0x00000000, 0x00000000,
+				0x00000000, 0xffffffc0, 0x00000000,
+			},
+			.caps_start = 0,
+			.num_caps = 0,
+			.num_msi_vectors = 0,
+			.msi_64bits = 0,
+			.num_msix_vectors = 0,
+			.msix_region_size = 0x0,
+			.msix_address = 0x0,
+		},
+	},
+
+	.pci_caps = {
+		/* PCIDevice: 00:02.0 */
+		/* PCIDevice: 00:03.0 */
+		{
+			.id = 0x11,
+			.start = 0x98,
+			.len = 12,
+			.flags = JAILHOUSE_PCICAPS_WRITE,
+		},
+		{
+			.id = 0x9,
+			.start = 0x84,
+			.len = 2,
+			.flags = 0,
+		},
+		{
+			.id = 0x9,
+			.start = 0x70,
+			.len = 2,
+			.flags = 0,
+		},
+		{
+			.id = 0x9,
+			.start = 0x60,
+			.len = 2,
+			.flags = 0,
+		},
+		{
+			.id = 0x9,
+			.start = 0x50,
+			.len = 2,
+			.flags = 0,
+		},
+		{
+			.id = 0x9,
+			.start = 0x40,
+			.len = 2,
+			.flags = 0,
+		},
+		/* PCIDevice: 00:1f.2 */
+		{
+			.id = 0x5,
+			.start = 0x80,
+			.len = 14,
+			.flags = JAILHOUSE_PCICAPS_WRITE,
+		},
+		{
+			.id = 0x12,
+			.start = 0xa8,
+			.len = 2,
+			.flags = 0,
+		},
+	},
+};
-- 
2.11.0

